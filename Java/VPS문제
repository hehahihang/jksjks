[문제]
괄호 문자열(Parenthesis String, PS)은 두 개의 괄호 기호인 ‘(’ 와 ‘)’ 만으로 구성되어 있는 문자열이다. 
그 중에서 괄호의 모양이 바르게 구성된 문자열을 올바른 괄호 문자열(Valid PS, VPS)이라고 부른다. 
한 쌍의 괄호 기호로 된 “( )” 문자열은 기본 VPS 이라고 부른다. 만일 x 가 VPS 라면 이것을 하나의 괄호에 넣은 새로운 문자열 “(x)”도 VPS 가 된다. 
그리고 두 VPS x 와 y를 접합(concatenation)시킨 새로운 문자열 xy도 VPS 가 된다. 
예를 들어 “(())()”와 “((()))” 는 VPS 이지만 “(()(”, “(())()))” , 그리고 “(()” 는 모두 VPS 가 아닌 문자열이다. 

여러분은 입력으로 주어진 괄호 문자열이 VPS 인지 아닌지를 판단해서 그 결과를 YES 와 NO 로 나타내어야 한다. 

[입력]
입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 주어진다. 
입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 
각 테스트 데이터의 첫째 줄에는 괄호 문자열이 한 줄에 주어진다. 하나의 괄호 문자열의 길이는 2 이상 50 이하이다. 

[출력]
출력은 표준 출력을 사용한다. 만일 입력 괄호 문자열이 올바른 괄호 문자열(VPS)이면 “YES”, 아니면 “NO”를 한 줄에 하나씩 차례대로 출력해야 한다

<풀이방법>
- 스택을 이용하여 문제를 해결한다.
- data의 입력 개수 n을 입력받는다. vps의 여부를 판별하는 boolean 타입 변수 vps를 true로 초기화한다.
- 입력받은 data를 index로 나누어 tmp에 저장한다.
- tmp =='(' 인 경우 스택에 push한다.
- tmp ==')' 일때 스택이 비어있다면 짝이 맞지 않으므로 vps = false
  (이 문제에서는 '(' 만이 스택에 push되므로) 스택이 비어있지 않다면 짝이 맞으므로 pop한다.
- 한 data에 대한 for문이 종료 된 후 if~else문을 vps를 확인하여 YES와NO를 출력하게한다.

package Stack;

import java.util.Scanner;
import java.util.Stack;

public class N9012 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		
		for(int i=0;i<n;i++)
		{
			Stack<Character> stack = new Stack<>();
			boolean vps = true;
			String data = sc.next();
			char tmp;
			for(int j=0;j<data.length();j++)
			{
				tmp = data.charAt(j);
				if(tmp=='(')
				{
					stack.push('(');
				}
				else if(tmp==')')
				{
					if(!stack.isEmpty())
					{
						stack.pop();
					}
					else
					{
						vps=false;
						break;
					}
				}
			}
			if(!stack.isEmpty())
				vps = false;
			if(vps==true)
				System.out.println("YES");
			else
				System.out.println("NO");
		}	
	}
}


[고찰]
- Integer 스택 st 객체를 생성하는 부분을 계속 for문 바깥에 놓아서 계속 틀렸었다.
이를 for문 안으로 집어 넣어주면서 for문이 반복될때마다 객체를 새로 생성하게해서 오류를 잡았다.
- 정말 단순한 실수지만 왜 그런지 이해를 못해서 1시간가량 똑같은 코드만 바라보고있었다..
- 다음부터는 이런 실수를 하지 않기위해 디버깅을 해서 코드가 동작하는 부분을 확인해봐야겠다
