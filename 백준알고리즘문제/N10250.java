/*[백준알고리즘][N10250]ACM호텔
문제
ACM 호텔 매니저 지우는 손님이 도착하는 대로 빈 방을 배정하고 있다. 고객 설문조사에 따르면 손님들은 호텔 정문으로부터 걸어서 가장 짧은 거리에 있는 방을 선호한다고 한다. 
여러분은 지우를 도와 줄 프로그램을 작성하고자 한다. 즉 설문조사 결과 대로 호텔 정문으로부터 걷는 거리가 가장 짧도록 방을 배정하는 프로그램을 작성하고자 한다.
문제를 단순화하기 위해서 호텔은 직사각형 모양이라고 가정하자. 각 층에 W 개의 방이 있는 H 층 건물이라고 가정하자 (1 ≤ H, W ≤ 99). 
그리고 엘리베이터는 가장 왼쪽에 있다고 가정하자(그림 1 참고). 이런 형태의 호텔을 H × W 형태 호텔이라고 부른다. 호텔 정문은 일층 엘리베이터 바로 앞에 있는데, 정문에서 엘리베이터까지의 거리는 무시한다. 
또 모든 인접한 두 방 사이의 거리는 같은 거리(거리 1)라고 가정하고 호텔의 정면 쪽에만 방이 있다고 가정한다.

방 번호는 YXX 나 YYXX 형태인데 여기서 Y 나 YY 는 층 수를 나타내고 XX 는 엘리베이터에서부터 세었을 때의 번호를 나타낸다. 즉, 그림 1 에서 빗금으로 표시한 방은 305 호가 된다.
손님은 엘리베이터를 타고 이동하는 거리는 신경 쓰지 않는다. 다만 걷는 거리가 같을 때에는 아래층의 방을 더 선호한다. 
예를 들면 102 호 방보다는 301 호 방을 더 선호하는데, 102 호는 거리 2 만큼 걸어야 하지만 301 호는 거리 1 만큼만 걸으면 되기 때문이다. 같은 이유로 102 호보다 2101 호를 더 선호한다.
여러분이 작성할 프로그램은 초기에 모든 방이 비어있다고 가정하에 이 정책에 따라 N 번째로 도착한 손님에게 배정될 방 번호를 계산하는 프로그램이다. 
첫 번째 손님은 101 호, 두 번째 손님은 201 호 등과 같이 배정한다. 그림 1 의 경우를 예로 들면, H = 6이므로 10 번째 손님은 402 호에 배정해야 한다.

입력
프로그램은 표준 입력에서 입력 데이터를 받는다. 프로그램의 입력은 T 개의 테스트 데이터로 이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. 
각 테스트 데이터는 한 행으로서 H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를 나타낸다(1 ≤ H, W ≤ 99, 1 ≤ N ≤ H × W). 

출력
프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.

예제 입력 1		예제 출력 1
2			
6 12 10		402
30 50 72	1203

[해결방법]
- 테스트케이스의 갯수만큼 반복한다.
- 도착한 손님의 순서 n에서 호텔의 층수 h를 반복해서 빼고 n<h 가 되는 순간의 나머지가
해당 손님이 머물 호텔의 층수가 된다.
(이 반복이 1회 진행될때마다 해당 호텔의 방 번호의 수 room_number는 증가한다.
- 이를 StringBuffer를 통해 숫자를 더해주고 int형으로 반환하여 출력한다.
*/
			

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class N10250 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		
		while(t>0) {
			StringBuilder sb = new StringBuilder();
			String [] str = br.readLine().split(" ");
			int h = Integer.parseInt(str[0]); //h층 
			int w = Integer.parseInt(str[1]); //몇호실까지있느냐
			int n = Integer.parseInt(str[2]); //n번째로 도착한 손님	
			
			int room_number=1;
			int room_height;
			
			while(true) {
				if(n>h) {
					n -= h;
					room_number++;
				}
				else {
					room_height = n;
					break;
				}
			}
			sb.append(room_height);
			if(room_number<10) {
				sb.append(0);
				sb.append(room_number);
			}
			else {
				sb.append(room_number);
			}
			System.out.println(sb.toString());
			
			t--;
		}
	}
}
